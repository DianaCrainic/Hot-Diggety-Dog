// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

namespace WebAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210406165833_UserRoleMigration")]
    partial class UserRoleMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("WebAPI.Entities.HotDogStand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.HasKey("Id");

                    b.ToTable("HotDogStands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7d40123-7e01-44d4-bc2a-3a82872c6f20"),
                            Address = "Grimmer's Road"
                        },
                        new
                        {
                            Id = new Guid("8cb4c5f0-0ff9-49f0-87df-6852d78f5601"),
                            Address = "Fieldfare Banks"
                        },
                        new
                        {
                            Id = new Guid("9acfa6fd-7bf5-40e5-8019-0212ab39da0d"),
                            Address = "Imperial Passage"
                        },
                        new
                        {
                            Id = new Guid("33d0cf59-33fc-425a-ac5c-622137759ed8"),
                            Address = "Woodville Square"
                        },
                        new
                        {
                            Id = new Guid("ec4ac133-0b8f-49f3-b0b0-e89f5a2d2f9b"),
                            Address = "Lindsey Circle"
                        },
                        new
                        {
                            Id = new Guid("0b864e0b-c85c-461d-ac25-8d135da5efd2"),
                            Address = "Alexander Banks"
                        });
                });

            modelBuilder.Entity("WebAPI.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97f454b0-a44c-407e-a7ba-26d2b42de062"),
                            Category = "HotDogs",
                            Description = "Basic hot dog with ketchup/mustard",
                            Name = "Hot Dog",
                            Price = 10f
                        },
                        new
                        {
                            Id = new Guid("8acf400e-45a3-447e-ad44-a70dfd26a7da"),
                            Category = "HotDogs",
                            Description = "Hot dog with caramelized onions and ketchup",
                            Name = "Hot Onion Dog",
                            Price = 12.5f
                        },
                        new
                        {
                            Id = new Guid("8ed02c83-36ea-45af-a728-5e250e91fd28"),
                            Category = "HotDogs",
                            Description = "Hot dog with melted gouda cheese and bacon",
                            Name = "Bacon Melt",
                            Price = 15f
                        },
                        new
                        {
                            Id = new Guid("4999ecc3-fab3-4ca3-acb8-23ab800eda98"),
                            Category = "Extras",
                            Description = "Regular fries",
                            Name = "Fries",
                            Price = 7.5f
                        },
                        new
                        {
                            Id = new Guid("77ab8221-e742-4712-ad85-d88e0cfd237b"),
                            Category = "Drinks",
                            Description = "Coke bottle",
                            Name = "Coke",
                            Price = 5f
                        });
                });

            modelBuilder.Entity("WebAPI.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e69e27e6-1d3c-44ab-9cb3-8f7a21e5e27d"),
                            Email = "customer@gmail.com",
                            Password = "B6C45863875E34487CA3C155ED145EFE12A74581E27BEFEC5AA661B8EE8CA6DD",
                            Role = 0,
                            Username = "customer"
                        },
                        new
                        {
                            Id = new Guid("dd4900c7-6025-433e-a0ee-643484b2c9ae"),
                            Email = "admin@gmail.com",
                            Password = "8C6976E5B5410415BDE908BD4DEE15DFB167A9C873FC4BB8A81F6F2AB448A918",
                            Role = 3,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("d2cb518b-4978-41ba-a021-eba20abcf050"),
                            Email = "operator@gmail.com",
                            Password = "06E55B633481F7BB072957EABCF110C972E86691C3CFEDABE088024BFFE42F23",
                            Role = 1,
                            Username = "operator"
                        },
                        new
                        {
                            Id = new Guid("65e5daee-9d34-48db-b924-7581395412a9"),
                            Email = "supplier@gmail.com",
                            Password = "955ED10B73D6265B1ADCF768B94F8DD5D91F33309DB94B6B3AF4EFA822F1D9AF",
                            Role = 2,
                            Username = "supplier"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

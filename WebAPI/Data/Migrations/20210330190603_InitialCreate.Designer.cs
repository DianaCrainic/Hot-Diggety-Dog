// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

namespace WebAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210330190603_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("WebAPI.Entities.HotDogStand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.HasKey("Id");

                    b.ToTable("HotDogStands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2656c55-c558-401e-94f4-547397a5973c"),
                            Address = "Grimmer's Road"
                        },
                        new
                        {
                            Id = new Guid("62771aa8-3da0-40d4-8561-bafe232f8e39"),
                            Address = "Fieldfare Banks"
                        },
                        new
                        {
                            Id = new Guid("6345ddac-e3d2-4254-84e6-5f722d8985bd"),
                            Address = "Imperial Passage"
                        },
                        new
                        {
                            Id = new Guid("90cd1ae4-af96-4e69-b8b3-9ea98ea7ef0e"),
                            Address = "Woodville Square"
                        },
                        new
                        {
                            Id = new Guid("1b4c8b59-cff8-4eb3-a810-7ea61a9f7343"),
                            Address = "Lindsey Circle"
                        },
                        new
                        {
                            Id = new Guid("5702456f-f920-45d7-a581-bb9276eaacb6"),
                            Address = "Alexander Banks"
                        });
                });

            modelBuilder.Entity("WebAPI.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a35bca61-1bc9-44d8-b1a0-e4b0cd9639c9"),
                            Category = "HotDogs",
                            Description = "Basic hot dog with ketchup/mustard",
                            Name = "Hot Dog",
                            Price = 10f
                        },
                        new
                        {
                            Id = new Guid("074aa619-635b-4e18-89e2-b74add2b0332"),
                            Category = "HotDogs",
                            Description = "Hot dog with caramelized onions and ketchup",
                            Name = "Hot Onion Dog",
                            Price = 12.5f
                        },
                        new
                        {
                            Id = new Guid("d728feb5-d16c-4929-8339-aef0c9681176"),
                            Category = "HotDogs",
                            Description = "Hot dog with melted gouda cheese and bacon",
                            Name = "Bacon Melt",
                            Price = 15f
                        },
                        new
                        {
                            Id = new Guid("9d6de5b5-1343-4cd5-be34-14d3d0e5d515"),
                            Category = "Extras",
                            Description = "Regular fries",
                            Name = "Fries",
                            Price = 7.5f
                        },
                        new
                        {
                            Id = new Guid("18bd4ee8-bff7-4f15-9cb5-24204ae414f0"),
                            Category = "Drinks",
                            Description = "Cola bottle",
                            Name = "Coke",
                            Price = 5f
                        });
                });

            modelBuilder.Entity("WebAPI.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
